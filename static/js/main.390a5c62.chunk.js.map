{"version":3,"sources":["Components/Notifications/Notifications.jsx","Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Layout/Layout.jsx","App.js","index.js"],"names":["Notifications","message","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","onClick","Section","title","children","defaultProps","FeedBack","state","addFeedback","elment","stateName","target","textContent","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kWAQeA,EAJO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACpB,mBAAGC,UAAU,gBAAb,SAA8BD,KCoBjBE,G,MApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACGJ,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,qBAAIJ,UAAU,cAAd,UACE,qBAAIA,UAAU,cAAd,mBAAmCE,KACnC,qBAAIF,UAAU,cAAd,sBAAsCG,KACtC,qBAAIH,UAAU,cAAd,kBAAkCI,KAClC,qBAAIJ,UAAU,cAAd,oBAAoCK,KACpC,qBAAIL,UAAU,cAAd,gCACsBM,EADtB,UAKF,cAAC,EAAD,CAAeP,QAAQ,0BCKhBQ,G,MApBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5B,OACI,oBAAIT,UAAU,iBAAd,SACCU,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GACxB,OACE,oBAAIb,UAAU,iBAAd,SACE,wBACEc,KAAK,SACLd,UAAU,gBACVe,QAASN,EAHX,SAKGI,KAN+BA,UCN9CG,G,MAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASlB,UAAU,UAAnB,UACE,oBAAIA,UAAU,iBAAd,SAAgCiB,IAC/BC,OAKQF,IAEfA,EAAQG,aAAe,CACrBF,MAAO,I,UCPHG,E,4MACJC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,YAAc,SAAAC,GACZ,IAAMC,EAAYD,EAAOE,OAAOC,YAEd,SAAdF,EAMc,YAAdA,EAMc,QAAdA,GACF,EAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1BxB,IAAKwB,EAAUxB,IAAM,MAPvB,EAAKuB,UAAS,SAAAC,GAAS,MAAK,CAC1BzB,QAASyB,EAAUzB,QAAU,MAP/B,EAAKwB,UAAS,SAAAC,GAAS,MAAK,CAC1B1B,KAAM0B,EAAU1B,KAAO,O,EAkB7B2B,mBAAqB,WACnB,MAA+B,EAAKR,MAGpC,OAHA,EAAQnB,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzB0B,gCAAkC,WAChC,IAAMzB,EAAQ,EAAKwB,qBAGnB,OAFmBE,KAAKC,KAAM,EAAKX,MAAMnB,KAAOG,EAAS,M,4CAK3D,WACE,MAA+B4B,KAAKZ,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,sBAAKJ,UAAU,oBAAf,UACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAASyB,KAAKZ,MACdZ,gBAAiBwB,KAAKX,gBAG1B,cAAC,EAAD,CAASL,MAAM,aAAf,SACE,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKJ,qBACZvB,mBAAoB2B,KAAKH,6C,GA7DdI,aAsEvBd,EAASD,aAAe,CACtBjB,KAAM,EACNC,QAAS,EACTC,IAAK,GAKQgB,Q,MCrEAe,MATf,WACE,OACE,qBAAKnC,UAAU,MAAf,SACE,cAAC,EAAD,OCPNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.390a5c62.chunk.js","sourcesContent":["  \r\nimport PropTypes from 'prop-types';\r\nimport './Notifications.scss'\r\n\r\nconst Notifications = ({ message }) => (\r\n  <p className=\"notifications\">{message}</p>\r\n);\r\n\r\nexport default Notifications;\r\n\r\nNotifications.propTypes = {\r\n  message: PropTypes.string,\r\n};","import PropTypes from 'prop-types';\r\n\r\nimport Notifications from '../Notifications'\r\nimport './Statistics.scss'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      {good > 0 || neutral > 0 || bad > 0 ? (\r\n        <ul className=\"stats__list\">\r\n          <li className=\"stats__item\">Good: {good}</li>\r\n          <li className=\"stats__item\">Neutral: {neutral}</li>\r\n          <li className=\"stats__item\">Bad: {bad}</li>\r\n          <li className=\"stats__item\">Total: {total}</li>\r\n          <li className=\"stats__item\">\r\n            Positive feedback: {positivePercentage}%\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notifications message=\"No feedback given\"></Notifications>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};","// import PropTypes from 'prop-types';\r\n\r\nimport './FeedbackOptions.scss'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n        return (\r\n            <ul className=\"feedback__list\">\r\n            {Object.keys(options).map(key => {\r\n              return (\r\n                <li className=\"feedback__item\" key={key}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"feedback__btn\"\r\n                    onClick={onLeaveFeedback}\r\n                  >\r\n                    {key}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport './Section.scss';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className=\"Section\">\r\n      <h2 className=\"Section__title\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { Component } from 'react';\r\n\r\nimport Statistics from '../Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Section from '../Section';\r\n\r\nimport './Layout.scss'\r\n\r\nclass FeedBack extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  addFeedback = elment => {\r\n    const stateName = elment.target.textContent;\r\n\r\n    if (stateName === 'good') {\r\n      this.setState(prevState => ({\r\n        good: prevState.good + 1,\r\n      }));\r\n      return;\r\n    }\r\n    if (stateName === 'neutral') {\r\n      this.setState(prevState => ({\r\n        neutral: prevState.neutral + 1,\r\n      }));\r\n      return;\r\n    }\r\n    if (stateName === 'bad') {\r\n      this.setState(prevState => ({\r\n        bad: prevState.bad + 1,\r\n      }));\r\n      return;\r\n    }\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const percentage = Math.ceil((this.state.good / total) * 100);\r\n\r\n    return percentage;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <div className=\"feedback__wrapper\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.addFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nFeedBack.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  // countTotalFeedback: 0,\r\n  // countPositiveFeedbackPercentage: 0,\r\n};\r\n\r\nexport default FeedBack;\r\n","\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nimport Layout from './Components/Layout'\r\nimport './App.scss'\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}